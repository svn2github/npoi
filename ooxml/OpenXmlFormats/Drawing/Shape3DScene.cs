// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>NPOI.OpenXmlFormats.Dml</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace NPOI.OpenXmlFormats.Dml
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;
    using System.IO;
    using System.Xml;


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", IsNullable = true)]
    public class CT_Scene3D
    {

        private CT_Camera cameraField;

        private CT_LightRig lightRigField;

        private CT_Backdrop backdropField;

        private CT_OfficeArtExtensionList extLstField;

        public CT_Scene3D()
        {
            //this.extLstField = new CT_OfficeArtExtensionList();
            //this.backdropField = new CT_Backdrop();
            //this.lightRigField = new CT_LightRig();
            //this.cameraField = new CT_Camera();
        }
        public static CT_Scene3D Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_Scene3D ctObj = new CT_Scene3D();
            foreach (XmlNode childNode in node.ChildNodes)
            {
                if (childNode.LocalName == "camera")
                    ctObj.camera = CT_Camera.Parse(childNode, namespaceManager);
                else if (childNode.LocalName == "lightRig")
                    ctObj.lightRig = CT_LightRig.Parse(childNode, namespaceManager);
                else if (childNode.LocalName == "backdrop")
                    ctObj.backdrop = CT_Backdrop.Parse(childNode, namespaceManager);
                else if (childNode.LocalName == "extLst")
                    ctObj.extLst = CT_OfficeArtExtensionList.Parse(childNode, namespaceManager);
            }
            return ctObj;
        }



        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<a:{0}", nodeName));
            sw.Write(">");
            if (this.camera != null)
                this.camera.Write(sw, "camera");
            if (this.lightRig != null)
                this.lightRig.Write(sw, "lightRig");
            if (this.backdrop != null)
                this.backdrop.Write(sw, "backdrop");
            if (this.extLst != null)
                this.extLst.Write(sw, "extLst");
            sw.Write(string.Format("</a:{0}>", nodeName));
        }

        [XmlElement(Order = 0)]
        public CT_Camera camera
        {
            get
            {
                return this.cameraField;
            }
            set
            {
                this.cameraField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_LightRig lightRig
        {
            get
            {
                return this.lightRigField;
            }
            set
            {
                this.lightRigField = value;
            }
        }

        [XmlElement(Order = 2)]
        public CT_Backdrop backdrop
        {
            get
            {
                return this.backdropField;
            }
            set
            {
                this.backdropField = value;
            }
        }

        [XmlElement(Order = 3)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
    }
}
