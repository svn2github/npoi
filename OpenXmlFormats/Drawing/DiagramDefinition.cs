// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>NPOI.OpenXmlFormats.Dml.Diagram</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>True</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace NPOI.OpenXmlFormats.Dml.Diagram
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;





    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Name
    {

        private string langField;

        private string valField;

        public CT_Name()
        {
            this.langField = "";
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                this.langField = value;
            }
        }

        [XmlAttribute]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Description
    {

        private string langField;

        private string valField;

        public CT_Description()
        {
            this.langField = "";
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                this.langField = value;
            }
        }

        [XmlAttribute]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Category
    {

        private string typeField;

        private uint priField;

        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "anyURI")]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [XmlAttribute]
        public uint pri
        {
            get
            {
                return this.priField;
            }
            set
            {
                this.priField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_SampleData
    {

        private CT_DataModel dataModelField;

        private bool useDefField;

        public CT_SampleData()
        {
            this.dataModelField = new CT_DataModel();
            this.useDefField = false;
        }

        [XmlElement(Order = 0)]
        public CT_DataModel dataModel
        {
            get
            {
                return this.dataModelField;
            }
            set
            {
                this.dataModelField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool useDef
        {
            get
            {
                return this.useDefField;
            }
            set
            {
                this.useDefField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_LayoutNode
    {

        private List<object> itemsField;

        private string nameField;

        private string styleLblField;

        private ST_ChildOrderType chOrderField;

        private string moveWithField;

        public CT_LayoutNode()
        {
            this.itemsField = new List<object>();
            this.nameField = "";
            this.styleLblField = "";
            this.chOrderField = ST_ChildOrderType.b;
            this.moveWithField = "";
        }

        [XmlElement("alg", typeof(CT_Algorithm), Order = 0)]
        [XmlElement("choose", typeof(CT_Choose), Order = 0)]
        [XmlElement("constrLst", typeof(CT_Constraints), Order = 0)]
        [XmlElement("extLst", typeof(CT_OfficeArtExtensionList), Order = 0)]
        [XmlElement("forEach", typeof(CT_ForEach), Order = 0)]
        [XmlElement("layoutNode", typeof(CT_LayoutNode), Order = 0)]
        [XmlElement("presOf", typeof(CT_PresentationOf), Order = 0)]
        [XmlElement("ruleLst", typeof(CT_Rules), Order = 0)]
        [XmlElement("shape", typeof(CT_Shape), Order = 0)]
        [XmlElement("varLst", typeof(CT_LayoutVariablePropertySet), Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string styleLbl
        {
            get
            {
                return this.styleLblField;
            }
            set
            {
                this.styleLblField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_ChildOrderType.b)]
        public ST_ChildOrderType chOrder
        {
            get
            {
                return this.chOrderField;
            }
            set
            {
                this.chOrderField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string moveWith
        {
            get
            {
                return this.moveWithField;
            }
            set
            {
                this.moveWithField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Algorithm
    {

        private List<CT_Parameter> paramField;

        private CT_OfficeArtExtensionList extLstField;

        private ST_AlgorithmType typeField;

        private uint revField;

        public CT_Algorithm()
        {
            this.paramField = new List<CT_Parameter>();
            this.revField = ((uint)(0));
        }

        [XmlElement("param", Order = 0)]
        public List<CT_Parameter> param
        {
            get
            {
                return this.paramField;
            }
            set
            {
                this.paramField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        public ST_AlgorithmType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(typeof(uint), "0")]
        public uint rev
        {
            get
            {
                return this.revField;
            }
            set
            {
                this.revField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Parameter
    {

        private ST_ParameterId typeField;

        private string valField;

        [XmlAttribute]
        public ST_ParameterId type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [XmlAttribute]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_ParameterId
    {

        /// <remarks/>
        horzAlign,

        /// <remarks/>
        vertAlign,

        /// <remarks/>
        chDir,

        /// <remarks/>
        chAlign,

        /// <remarks/>
        secChAlign,

        /// <remarks/>
        linDir,

        /// <remarks/>
        secLinDir,

        /// <remarks/>
        stElem,

        /// <remarks/>
        bendPt,

        /// <remarks/>
        connRout,

        /// <remarks/>
        begSty,

        /// <remarks/>
        endSty,

        /// <remarks/>
        dim,

        /// <remarks/>
        rotPath,

        /// <remarks/>
        ctrShpMap,

        /// <remarks/>
        nodeHorzAlign,

        /// <remarks/>
        nodeVertAlign,

        /// <remarks/>
        fallback,

        /// <remarks/>
        txDir,

        /// <remarks/>
        pyraAcctPos,

        /// <remarks/>
        pyraAcctTxMar,

        /// <remarks/>
        txBlDir,

        /// <remarks/>
        txAnchorHorz,

        /// <remarks/>
        txAnchorVert,

        /// <remarks/>
        txAnchorHorzCh,

        /// <remarks/>
        txAnchorVertCh,

        /// <remarks/>
        parTxLTRAlign,

        /// <remarks/>
        parTxRTLAlign,

        /// <remarks/>
        shpTxLTRAlignCh,

        /// <remarks/>
        shpTxRTLAlignCh,

        /// <remarks/>
        autoTxRot,

        /// <remarks/>
        grDir,

        /// <remarks/>
        flowDir,

        /// <remarks/>
        contDir,

        /// <remarks/>
        bkpt,

        /// <remarks/>
        off,

        /// <remarks/>
        hierAlign,

        /// <remarks/>
        bkPtFixedVal,

        /// <remarks/>
        stBulletLvl,

        /// <remarks/>
        stAng,

        /// <remarks/>
        spanAng,

        /// <remarks/>
        ar,

        /// <remarks/>
        lnSpPar,

        /// <remarks/>
        lnSpAfParP,

        /// <remarks/>
        lnSpCh,

        /// <remarks/>
        lnSpAfChP,

        /// <remarks/>
        rtShortDist,

        /// <remarks/>
        alignTx,

        /// <remarks/>
        pyraLvlNode,

        /// <remarks/>
        pyraAcctBkgdNode,

        /// <remarks/>
        pyraAcctTxNode,

        /// <remarks/>
        srcNode,

        /// <remarks/>
        dstNode,

        /// <remarks/>
        begPts,

        /// <remarks/>
        endPts,
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_AlgorithmType
    {

        /// <remarks/>
        composite,

        /// <remarks/>
        conn,

        /// <remarks/>
        cycle,

        /// <remarks/>
        hierChild,

        /// <remarks/>
        hierRoot,

        /// <remarks/>
        pyra,

        /// <remarks/>
        lin,

        /// <remarks/>
        sp,

        /// <remarks/>
        tx,

        /// <remarks/>
        snake,
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Choose
    {

        private List<CT_When> ifField;

        private CT_Otherwise elseField;

        private string nameField;

        public CT_Choose()
        {
            this.elseField = new CT_Otherwise();
            this.ifField = new List<CT_When>();
            this.nameField = "";
        }

        [XmlElement("if", Order = 0)]
        public List<CT_When> @if
        {
            get
            {
                return this.ifField;
            }
            set
            {
                this.ifField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_Otherwise @else
        {
            get
            {
                return this.elseField;
            }
            set
            {
                this.elseField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_When
    {

        private List<object> itemsField;

        private string nameField;

        private List<ST_AxisType> axisField;

        private List<ST_ElementType> ptTypeField;

        private List<bool> hideLastTransField;

        private List<int> stField;

        private List<uint> cntField;

        private List<int> stepField;

        private ST_FunctionType funcField;

        private string argField;

        private ST_FunctionOperator opField;

        private string valField;

        public CT_When()
        {
            this.stepField = new List<int>();
            this.cntField = new List<uint>();
            this.stField = new List<int>();
            this.hideLastTransField = new List<bool>();
            this.ptTypeField = new List<ST_ElementType>();
            this.axisField = new List<ST_AxisType>();
            this.itemsField = new List<object>();
            this.nameField = "";
            this.axisField = new List<ST_AxisType>(new ST_AxisType[] {
                    ST_AxisType.none});
            this.ptTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.hideLastTransField = new List<bool>(new bool[] {
                    true});
            this.stField = new List<int>(new int[] {
                    1});
            this.cntField = new List<uint>(new uint[] {
                    ((uint)(0))});
            this.stepField = new List<int>(new int[] {
                    1});
            this.argField = "none";
        }

        [XmlElement("alg", typeof(CT_Algorithm), Order = 0)]
        [XmlElement("choose", typeof(CT_Choose), Order = 0)]
        [XmlElement("constrLst", typeof(CT_Constraints), Order = 0)]
        [XmlElement("extLst", typeof(CT_OfficeArtExtensionList), Order = 0)]
        [XmlElement("forEach", typeof(CT_ForEach), Order = 0)]
        [XmlElement("layoutNode", typeof(CT_LayoutNode), Order = 0)]
        [XmlElement("presOf", typeof(CT_PresentationOf), Order = 0)]
        [XmlElement("ruleLst", typeof(CT_Rules), Order = 0)]
        [XmlElement("shape", typeof(CT_Shape), Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        [XmlAttribute]
        public List<ST_AxisType> axis
        {
            get
            {
                return this.axisField;
            }
            set
            {
                this.axisField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> ptType
        {
            get
            {
                return this.ptTypeField;
            }
            set
            {
                this.ptTypeField = value;
            }
        }

        [XmlAttribute]
        public List<bool> hideLastTrans
        {
            get
            {
                return this.hideLastTransField;
            }
            set
            {
                this.hideLastTransField = value;
            }
        }

        [XmlAttribute]
        public List<int> st
        {
            get
            {
                return this.stField;
            }
            set
            {
                this.stField = value;
            }
        }

        [XmlAttribute]
        public List<uint> cnt
        {
            get
            {
                return this.cntField;
            }
            set
            {
                this.cntField = value;
            }
        }

        [XmlAttribute]
        public List<int> step
        {
            get
            {
                return this.stepField;
            }
            set
            {
                this.stepField = value;
            }
        }

        [XmlAttribute]
        public ST_FunctionType func
        {
            get
            {
                return this.funcField;
            }
            set
            {
                this.funcField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("none")]
        public string arg
        {
            get
            {
                return this.argField;
            }
            set
            {
                this.argField = value;
            }
        }

        [XmlAttribute]
        public ST_FunctionOperator op
        {
            get
            {
                return this.opField;
            }
            set
            {
                this.opField = value;
            }
        }

        [XmlAttribute]
        public string val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Constraints
    {

        private List<CT_Constraint> constrField;

        public CT_Constraints()
        {
            this.constrField = new List<CT_Constraint>();
        }

        [XmlElement("constr", Order = 0)]
        public List<CT_Constraint> constr
        {
            get
            {
                return this.constrField;
            }
            set
            {
                this.constrField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Constraint
    {

        private CT_OfficeArtExtensionList extLstField;

        private ST_ConstraintType typeField;

        private ST_ConstraintRelationship forField;

        private string forNameField;

        private List<ST_ElementType> ptTypeField;

        private ST_ConstraintType refTypeField;

        private ST_ConstraintRelationship refForField;

        private string refForNameField;

        private List<ST_ElementType> refPtTypeField;

        private ST_BoolOperator opField;

        private double valField;

        private double factField;

        public CT_Constraint()
        {
            this.refPtTypeField = new List<ST_ElementType>();
            this.ptTypeField = new List<ST_ElementType>();
            this.forField = ST_ConstraintRelationship.self;
            this.forNameField = "";
            this.ptTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.refTypeField = ST_ConstraintType.none;
            this.refForField = ST_ConstraintRelationship.self;
            this.refForNameField = "";
            this.refPtTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.opField = ST_BoolOperator.none;
            this.valField = 0D;
            this.factField = 1D;
        }

        [XmlElement(Order = 0)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        public ST_ConstraintType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_ConstraintRelationship.self)]
        public ST_ConstraintRelationship @for
        {
            get
            {
                return this.forField;
            }
            set
            {
                this.forField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string forName
        {
            get
            {
                return this.forNameField;
            }
            set
            {
                this.forNameField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> ptType
        {
            get
            {
                return this.ptTypeField;
            }
            set
            {
                this.ptTypeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_ConstraintType.none)]
        public ST_ConstraintType refType
        {
            get
            {
                return this.refTypeField;
            }
            set
            {
                this.refTypeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_ConstraintRelationship.self)]
        public ST_ConstraintRelationship refFor
        {
            get
            {
                return this.refForField;
            }
            set
            {
                this.refForField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string refForName
        {
            get
            {
                return this.refForNameField;
            }
            set
            {
                this.refForNameField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> refPtType
        {
            get
            {
                return this.refPtTypeField;
            }
            set
            {
                this.refPtTypeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_BoolOperator.none)]
        public ST_BoolOperator op
        {
            get
            {
                return this.opField;
            }
            set
            {
                this.opField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(0D)]
        public double val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(1D)]
        public double fact
        {
            get
            {
                return this.factField;
            }
            set
            {
                this.factField = value;
            }
        }
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_ConstraintType
    {

        /// <remarks/>
        none,

        /// <remarks/>
        alignOff,

        /// <remarks/>
        begMarg,

        /// <remarks/>
        bendDist,

        /// <remarks/>
        begPad,

        /// <remarks/>
        b,

        /// <remarks/>
        bMarg,

        /// <remarks/>
        bOff,

        /// <remarks/>
        ctrX,

        /// <remarks/>
        ctrXOff,

        /// <remarks/>
        ctrY,

        /// <remarks/>
        ctrYOff,

        /// <remarks/>
        connDist,

        /// <remarks/>
        diam,

        /// <remarks/>
        endMarg,

        /// <remarks/>
        endPad,

        /// <remarks/>
        h,

        /// <remarks/>
        hArH,

        /// <remarks/>
        hOff,

        /// <remarks/>
        l,

        /// <remarks/>
        lMarg,

        /// <remarks/>
        lOff,

        /// <remarks/>
        r,

        /// <remarks/>
        rMarg,

        /// <remarks/>
        rOff,

        /// <remarks/>
        primFontSz,

        /// <remarks/>
        pyraAcctRatio,

        /// <remarks/>
        secFontSz,

        /// <remarks/>
        sibSp,

        /// <remarks/>
        secSibSp,

        /// <remarks/>
        sp,

        /// <remarks/>
        stemThick,

        /// <remarks/>
        t,

        /// <remarks/>
        tMarg,

        /// <remarks/>
        tOff,

        /// <remarks/>
        userA,

        /// <remarks/>
        userB,

        /// <remarks/>
        userC,

        /// <remarks/>
        userD,

        /// <remarks/>
        userE,

        /// <remarks/>
        userF,

        /// <remarks/>
        userG,

        /// <remarks/>
        userH,

        /// <remarks/>
        userI,

        /// <remarks/>
        userJ,

        /// <remarks/>
        userK,

        /// <remarks/>
        userL,

        /// <remarks/>
        userM,

        /// <remarks/>
        userN,

        /// <remarks/>
        userO,

        /// <remarks/>
        userP,

        /// <remarks/>
        userQ,

        /// <remarks/>
        userR,

        /// <remarks/>
        userS,

        /// <remarks/>
        userT,

        /// <remarks/>
        userU,

        /// <remarks/>
        userV,

        /// <remarks/>
        userW,

        /// <remarks/>
        userX,

        /// <remarks/>
        userY,

        /// <remarks/>
        userZ,

        /// <remarks/>
        w,

        /// <remarks/>
        wArH,

        /// <remarks/>
        wOff,
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_ConstraintRelationship
    {

        /// <remarks/>
        self,

        /// <remarks/>
        ch,

        /// <remarks/>
        des,
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_ElementType
    {

        /// <remarks/>
        all,

        /// <remarks/>
        doc,

        /// <remarks/>
        node,

        /// <remarks/>
        norm,

        /// <remarks/>
        nonNorm,

        /// <remarks/>
        asst,

        /// <remarks/>
        nonAsst,

        /// <remarks/>
        parTrans,

        /// <remarks/>
        pres,

        /// <remarks/>
        sibTrans,
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_BoolOperator
    {

        /// <remarks/>
        none,

        /// <remarks/>
        equ,

        /// <remarks/>
        gte,

        /// <remarks/>
        lte,
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_ForEach
    {

        private List<object> itemsField;

        private string nameField;

        private string refField;

        private List<ST_AxisType> axisField;

        private List<ST_ElementType> ptTypeField;

        private List<bool> hideLastTransField;

        private List<int> stField;

        private List<uint> cntField;

        private List<int> stepField;

        public CT_ForEach()
        {
            this.stepField = new List<int>();
            this.cntField = new List<uint>();
            this.stField = new List<int>();
            this.hideLastTransField = new List<bool>();
            this.ptTypeField = new List<ST_ElementType>();
            this.axisField = new List<ST_AxisType>();
            this.itemsField = new List<object>();
            this.nameField = "";
            this.refField = "";
            this.axisField = new List<ST_AxisType>(new ST_AxisType[] {
                    ST_AxisType.none});
            this.ptTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.hideLastTransField = new List<bool>(new bool[] {
                    true});
            this.stField = new List<int>(new int[] {
                    1});
            this.cntField = new List<uint>(new uint[] {
                    ((uint)(0))});
            this.stepField = new List<int>(new int[] {
                    1});
        }

        [XmlElement("alg", typeof(CT_Algorithm), Order = 0)]
        [XmlElement("choose", typeof(CT_Choose), Order = 0)]
        [XmlElement("constrLst", typeof(CT_Constraints), Order = 0)]
        [XmlElement("extLst", typeof(CT_OfficeArtExtensionList), Order = 0)]
        [XmlElement("forEach", typeof(CT_ForEach), Order = 0)]
        [XmlElement("layoutNode", typeof(CT_LayoutNode), Order = 0)]
        [XmlElement("presOf", typeof(CT_PresentationOf), Order = 0)]
        [XmlElement("ruleLst", typeof(CT_Rules), Order = 0)]
        [XmlElement("shape", typeof(CT_Shape), Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string @ref
        {
            get
            {
                return this.refField;
            }
            set
            {
                this.refField = value;
            }
        }

        [XmlAttribute]
        public List<ST_AxisType> axis
        {
            get
            {
                return this.axisField;
            }
            set
            {
                this.axisField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> ptType
        {
            get
            {
                return this.ptTypeField;
            }
            set
            {
                this.ptTypeField = value;
            }
        }

        [XmlAttribute]
        public List<bool> hideLastTrans
        {
            get
            {
                return this.hideLastTransField;
            }
            set
            {
                this.hideLastTransField = value;
            }
        }

        [XmlAttribute]
        public List<int> st
        {
            get
            {
                return this.stField;
            }
            set
            {
                this.stField = value;
            }
        }

        [XmlAttribute]
        public List<uint> cnt
        {
            get
            {
                return this.cntField;
            }
            set
            {
                this.cntField = value;
            }
        }

        [XmlAttribute]
        public List<int> step
        {
            get
            {
                return this.stepField;
            }
            set
            {
                this.stepField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_PresentationOf
    {

        private CT_OfficeArtExtensionList extLstField;

        private List<ST_AxisType> axisField;

        private List<ST_ElementType> ptTypeField;

        private List<bool> hideLastTransField;

        private List<int> stField;

        private List<uint> cntField;

        private List<int> stepField;

        public CT_PresentationOf()
        {
            this.stepField = new List<int>();
            this.cntField = new List<uint>();
            this.stField = new List<int>();
            this.hideLastTransField = new List<bool>();
            this.ptTypeField = new List<ST_ElementType>();
            this.axisField = new List<ST_AxisType>();
            this.axisField = new List<ST_AxisType>(new ST_AxisType[] {
                    ST_AxisType.none});
            this.ptTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.hideLastTransField = new List<bool>(new bool[] {
                    true});
            this.stField = new List<int>(new int[] {
                    1});
            this.cntField = new List<uint>(new uint[] {
                    ((uint)(0))});
            this.stepField = new List<int>(new int[] {
                    1});
        }

        [XmlElement(Order = 0)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        public List<ST_AxisType> axis
        {
            get
            {
                return this.axisField;
            }
            set
            {
                this.axisField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> ptType
        {
            get
            {
                return this.ptTypeField;
            }
            set
            {
                this.ptTypeField = value;
            }
        }

        [XmlAttribute]
        public List<bool> hideLastTrans
        {
            get
            {
                return this.hideLastTransField;
            }
            set
            {
                this.hideLastTransField = value;
            }
        }

        [XmlAttribute]
        public List<int> st
        {
            get
            {
                return this.stField;
            }
            set
            {
                this.stField = value;
            }
        }

        [XmlAttribute]
        public List<uint> cnt
        {
            get
            {
                return this.cntField;
            }
            set
            {
                this.cntField = value;
            }
        }

        [XmlAttribute]
        public List<int> step
        {
            get
            {
                return this.stepField;
            }
            set
            {
                this.stepField = value;
            }
        }
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_AxisType
    {

        /// <remarks/>
        self,

        /// <remarks/>
        ch,

        /// <remarks/>
        des,

        /// <remarks/>
        desOrSelf,

        /// <remarks/>
        par,

        /// <remarks/>
        ancst,

        /// <remarks/>
        ancstOrSelf,

        /// <remarks/>
        followSib,

        /// <remarks/>
        precedSib,

        /// <remarks/>
        follow,

        /// <remarks/>
        preced,

        /// <remarks/>
        root,

        /// <remarks/>
        none,
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Rules
    {

        private List<CT_NumericRule> ruleField;

        public CT_Rules()
        {
            this.ruleField = new List<CT_NumericRule>();
        }

        [XmlElement("rule", Order = 0)]
        public List<CT_NumericRule> rule
        {
            get
            {
                return this.ruleField;
            }
            set
            {
                this.ruleField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_NumericRule
    {

        private CT_OfficeArtExtensionList extLstField;

        private ST_ConstraintType typeField;

        private ST_ConstraintRelationship forField;

        private string forNameField;

        private List<ST_ElementType> ptTypeField;

        private double valField;

        private double factField;

        private double maxField;

        public CT_NumericRule()
        {
            this.ptTypeField = new List<ST_ElementType>();
            this.forField = ST_ConstraintRelationship.self;
            this.forNameField = "";
            this.ptTypeField = new List<ST_ElementType>(new ST_ElementType[] {
                    ST_ElementType.all});
            this.valField = double.NaN;
            this.factField = double.NaN;
            this.maxField = double.NaN;
        }

        [XmlElement(Order = 0)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        public ST_ConstraintType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(ST_ConstraintRelationship.self)]
        public ST_ConstraintRelationship @for
        {
            get
            {
                return this.forField;
            }
            set
            {
                this.forField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string forName
        {
            get
            {
                return this.forNameField;
            }
            set
            {
                this.forNameField = value;
            }
        }

        [XmlAttribute]
        public List<ST_ElementType> ptType
        {
            get
            {
                return this.ptTypeField;
            }
            set
            {
                this.ptTypeField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(double.NaN)]
        public double val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(double.NaN)]
        public double fact
        {
            get
            {
                return this.factField;
            }
            set
            {
                this.factField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(double.NaN)]
        public double max
        {
            get
            {
                return this.maxField;
            }
            set
            {
                this.maxField = value;
            }
        }
    }




    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Adj
    {

        private uint idxField;

        private double valField;

        [XmlAttribute]
        public uint idx
        {
            get
            {
                return this.idxField;
            }
            set
            {
                this.idxField = value;
            }
        }

        [XmlAttribute]
        public double val
        {
            get
            {
                return this.valField;
            }
            set
            {
                this.valField = value;
            }
        }
    }



    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_AdjLst
    {

        private List<CT_Adj> adjField;

        public CT_AdjLst()
        {
            this.adjField = new List<CT_Adj>();
        }

        [XmlElement("adj", Order = 0)]
        public List<CT_Adj> adj
        {
            get
            {
                return this.adjField;
            }
            set
            {
                this.adjField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Shape
    {

        private List<CT_Adj> adjLstField;

        private CT_OfficeArtExtensionList extLstField;

        private double rotField;

        private string typeField;

        private string blipField;

        private int zOrderOffField;

        private bool hideGeomField;

        private bool lkTxEntryField;

        private bool blipPhldrField;

        public CT_Shape()
        {
            this.adjLstField = new List<CT_Adj>();
            this.rotField = 0D;
            this.typeField = "none";
            this.blipField = "";
            this.zOrderOffField = 0;
            this.hideGeomField = false;
            this.lkTxEntryField = false;
            this.blipPhldrField = false;
        }

        [XmlArray(Order = 0)]
        [XmlArrayItem("adj", IsNullable = false)]
        public List<CT_Adj> adjLst
        {
            get
            {
                return this.adjLstField;
            }
            set
            {
                this.adjLstField = value;
            }
        }

        [XmlElement(Order = 1)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(0D)]
        public double rot
        {
            get
            {
                return this.rotField;
            }
            set
            {
                this.rotField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("none")]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [DefaultValue("")]
        public string blip
        {
            get
            {
                return this.blipField;
            }
            set
            {
                this.blipField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(0)]
        public int zOrderOff
        {
            get
            {
                return this.zOrderOffField;
            }
            set
            {
                this.zOrderOffField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool hideGeom
        {
            get
            {
                return this.hideGeomField;
            }
            set
            {
                this.hideGeomField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool lkTxEntry
        {
            get
            {
                return this.lkTxEntryField;
            }
            set
            {
                this.lkTxEntryField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool blipPhldr
        {
            get
            {
                return this.blipPhldrField;
            }
            set
            {
                this.blipPhldrField = value;
            }
        }
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_FunctionType
    {

        /// <remarks/>
        cnt,

        /// <remarks/>
        pos,

        /// <remarks/>
        revPos,

        /// <remarks/>
        posEven,

        /// <remarks/>
        posOdd,

        /// <remarks/>
        var,

        /// <remarks/>
        depth,

        /// <remarks/>
        maxDepth,
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_FunctionOperator
    {

        /// <remarks/>
        equ,

        /// <remarks/>
        neq,

        /// <remarks/>
        gt,

        /// <remarks/>
        lt,

        /// <remarks/>
        gte,

        /// <remarks/>
        lte,
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Otherwise
    {

        private List<object> itemsField;

        private string nameField;

        public CT_Otherwise()
        {
            this.itemsField = new List<object>();
            this.nameField = "";
        }

        [XmlElement("alg", typeof(CT_Algorithm), Order = 0)]
        [XmlElement("choose", typeof(CT_Choose), Order = 0)]
        [XmlElement("constrLst", typeof(CT_Constraints), Order = 0)]
        [XmlElement("extLst", typeof(CT_OfficeArtExtensionList), Order = 0)]
        [XmlElement("forEach", typeof(CT_ForEach), Order = 0)]
        [XmlElement("layoutNode", typeof(CT_LayoutNode), Order = 0)]
        [XmlElement("presOf", typeof(CT_PresentationOf), Order = 0)]
        [XmlElement("ruleLst", typeof(CT_Rules), Order = 0)]
        [XmlElement("shape", typeof(CT_Shape), Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }


    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    public enum ST_ChildOrderType
    {

        /// <remarks/>
        b,

        /// <remarks/>
        t,
    }






    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = true)]
    public partial class CT_Categories
    {

        private List<CT_Category> catField;

        public CT_Categories()
        {
            this.catField = new List<CT_Category>();
        }

        [XmlElement("cat", Order = 0)]
        public List<CT_Category> cat
        {
            get
            {
                return this.catField;
            }
            set
            {
                this.catField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot("layoutDef", Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = false)]
    public partial class CT_DiagramDefinition
    {

        private List<CT_Name> titleField;

        private List<CT_Description> descField;

        private List<CT_Category> catLstField;

        private CT_SampleData sampDataField;

        private CT_SampleData styleDataField;

        private CT_SampleData clrDataField;

        private CT_LayoutNode layoutNodeField;

        private CT_OfficeArtExtensionList extLstField;

        private string uniqueIdField;

        private string minVerField;

        private string defStyleField;

        public CT_DiagramDefinition()
        {
            this.layoutNodeField = new CT_LayoutNode();
            this.clrDataField = new CT_SampleData();
            this.styleDataField = new CT_SampleData();
            this.sampDataField = new CT_SampleData();
            this.catLstField = new List<CT_Category>();
            this.descField = new List<CT_Description>();
            this.titleField = new List<CT_Name>();
            this.uniqueIdField = "";
            this.minVerField = "http://schemas.openxmlformats.org/drawingml/2006/diagram";
            this.defStyleField = "";
        }

        [XmlElement("title", Order = 0)]
        public List<CT_Name> title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        [XmlElement("desc", Order = 1)]
        public List<CT_Description> desc
        {
            get
            {
                return this.descField;
            }
            set
            {
                this.descField = value;
            }
        }

        [XmlArray(Order = 2)]
        [XmlArrayItem("cat", IsNullable = false)]
        public List<CT_Category> catLst
        {
            get
            {
                return this.catLstField;
            }
            set
            {
                this.catLstField = value;
            }
        }

        [XmlElement(Order = 3)]
        public CT_SampleData sampData
        {
            get
            {
                return this.sampDataField;
            }
            set
            {
                this.sampDataField = value;
            }
        }

        [XmlElement(Order = 4)]
        public CT_SampleData styleData
        {
            get
            {
                return this.styleDataField;
            }
            set
            {
                this.styleDataField = value;
            }
        }

        [XmlElement(Order = 5)]
        public CT_SampleData clrData
        {
            get
            {
                return this.clrDataField;
            }
            set
            {
                this.clrDataField = value;
            }
        }

        [XmlElement(Order = 6)]
        public CT_LayoutNode layoutNode
        {
            get
            {
                return this.layoutNodeField;
            }
            set
            {
                this.layoutNodeField = value;
            }
        }

        [XmlElement(Order = 7)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string uniqueId
        {
            get
            {
                return this.uniqueIdField;
            }
            set
            {
                this.uniqueIdField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("http://schemas.openxmlformats.org/drawingml/2006/diagram")]
        public string minVer
        {
            get
            {
                return this.minVerField;
            }
            set
            {
                this.minVerField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string defStyle
        {
            get
            {
                return this.defStyleField;
            }
            set
            {
                this.defStyleField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot("layoutDefHdr", Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = false)]
    public partial class CT_DiagramDefinitionHeader
    {

        private List<CT_Name> titleField;

        private List<CT_Description> descField;

        private List<CT_Category> catLstField;

        private CT_OfficeArtExtensionList extLstField;

        private string uniqueIdField;

        private string minVerField;

        private string defStyleField;

        private int resIdField;

        public CT_DiagramDefinitionHeader()
        {
            this.catLstField = new List<CT_Category>();
            this.descField = new List<CT_Description>();
            this.titleField = new List<CT_Name>();
            this.minVerField = "http://schemas.openxmlformats.org/drawingml/2006/diagram";
            this.defStyleField = "";
            this.resIdField = 0;
        }

        [XmlElement("title", Order = 0)]
        public List<CT_Name> title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        [XmlElement("desc", Order = 1)]
        public List<CT_Description> desc
        {
            get
            {
                return this.descField;
            }
            set
            {
                this.descField = value;
            }
        }

        [XmlArray(Order = 2)]
        [XmlArrayItem("cat", IsNullable = false)]
        public List<CT_Category> catLst
        {
            get
            {
                return this.catLstField;
            }
            set
            {
                this.catLstField = value;
            }
        }

        [XmlElement(Order = 3)]
        public CT_OfficeArtExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }

        [XmlAttribute]
        public string uniqueId
        {
            get
            {
                return this.uniqueIdField;
            }
            set
            {
                this.uniqueIdField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("http://schemas.openxmlformats.org/drawingml/2006/diagram")]
        public string minVer
        {
            get
            {
                return this.minVerField;
            }
            set
            {
                this.minVerField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue("")]
        public string defStyle
        {
            get
            {
                return this.defStyleField;
            }
            set
            {
                this.defStyleField = value;
            }
        }

        [XmlAttribute]
        [DefaultValue(0)]
        public int resId
        {
            get
            {
                return this.resIdField;
            }
            set
            {
                this.resIdField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot("layoutDefHdrLst", Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = false)]
    public partial class CT_DiagramDefinitionHeaderLst
    {

        private List<CT_DiagramDefinitionHeader> layoutDefHdrField;

        public CT_DiagramDefinitionHeaderLst()
        {
            this.layoutDefHdrField = new List<CT_DiagramDefinitionHeader>();
        }

        [XmlElement("layoutDefHdr", Order = 0)]
        public List<CT_DiagramDefinitionHeader> layoutDefHdr
        {
            get
            {
                return this.layoutDefHdrField;
            }
            set
            {
                this.layoutDefHdrField = value;
            }
        }
    }


    [Serializable]
    [DebuggerStepThrough]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram")]
    [XmlRoot("relIds", Namespace = "http://schemas.openxmlformats.org/drawingml/2006/diagram", IsNullable = false)]
    public partial class CT_RelIds
    {

        private string dmField;

        private string loField;

        private string qsField;

        private string csField;

        public CT_RelIds()
        {
            this.dmField = "";
            this.loField = "";
            this.qsField = "";
            this.csField = "";
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [DefaultValue("")]
        public string dm
        {
            get
            {
                return this.dmField;
            }
            set
            {
                this.dmField = value;
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [DefaultValue("")]
        public string lo
        {
            get
            {
                return this.loField;
            }
            set
            {
                this.loField = value;
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [DefaultValue("")]
        public string qs
        {
            get
            {
                return this.qsField;
            }
            set
            {
                this.qsField = value;
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://schemas.openxmlformats.org/officeDocument/2006/relationships")]
        [DefaultValue("")]
        public string cs
        {
            get
            {
                return this.csField;
            }
            set
            {
                this.csField = value;
            }
        }
    }
}
