// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>schemas</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------

using NPOI.OpenXml4Net.Util;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Xml;
using System.Xml.Serialization;

namespace NPOI.OpenXmlFormats.Spreadsheet
{

    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_XmlColumnPr
    {

        private CT_ExtensionList extLstField;

        private uint mapIdField;

        private string xpathField;

        private bool denormalizedField;

        private ST_XmlDataType xmlDataTypeField;

        public static CT_XmlColumnPr Parse(XmlNode node, XmlNamespaceManager namespaceManager)
        {
            if (node == null)
                return null;
            CT_XmlColumnPr ctObj = new CT_XmlColumnPr();
            if (node.Attributes["mapId"] != null)
                ctObj.mapId = XmlHelper.ReadUInt(node.Attributes["mapId"]);
            ctObj.xpath = XmlHelper.ReadString(node.Attributes["xpath"]);
            if (node.Attributes["denormalized"] != null)
                ctObj.denormalized = XmlHelper.ReadBool(node.Attributes["denormalized"]);
            if (node.Attributes["xmlDataType"] != null)
                ctObj.xmlDataType = (ST_XmlDataType)Enum.Parse(typeof(ST_XmlDataType), node.Attributes["xmlDataType"].Value);
            foreach (XmlNode childNode in node.ChildNodes)
            {
                if (childNode.LocalName == "extLst")
                    ctObj.extLst = CT_ExtensionList.Parse(childNode, namespaceManager);
            }
            return ctObj;
        }
        internal void Write(StreamWriter sw, string nodeName)
        {
            sw.Write(string.Format("<{0}", nodeName));
            XmlHelper.WriteAttribute(sw, "mapId", this.mapId);
            XmlHelper.WriteAttribute(sw, "xpath", this.xpath);
            XmlHelper.WriteAttribute(sw, "denormalized", this.denormalized);
            XmlHelper.WriteAttribute(sw, "xmlDataType", this.xmlDataType.ToString());
            sw.Write(">");
            if (this.extLst != null)
                this.extLst.Write(sw, "extLst");
            sw.Write(string.Format("</{0}>", nodeName));
        }


        public CT_XmlColumnPr()
        {
            //this.extLstField = new CT_ExtensionList();
            this.denormalizedField = false;
        }
        [XmlElement]
        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
        [XmlAttribute]
        public uint mapId
        {
            get
            {
                return this.mapIdField;
            }
            set
            {
                this.mapIdField = value;
            }
        }
        [XmlAttribute]
        public string xpath
        {
            get
            {
                return this.xpathField;
            }
            set
            {
                this.xpathField = value;
            }
        }
        [XmlAttribute]
        [DefaultValue(false)]
        public bool denormalized
        {
            get
            {
                return this.denormalizedField;
            }
            set
            {
                this.denormalizedField = value;
            }
        }
        [XmlAttribute]
        public ST_XmlDataType xmlDataType
        {
            get
            {
                return this.xmlDataTypeField;
            }
            set
            {
                this.xmlDataTypeField = value;
            }
        }
    }

    public enum ST_XmlDataType
    {

    
        @string,

    
        normalizedString,

    
        token,

    
        @byte,

    
        unsignedByte,

    
        base64Binary,

    
        hexBinary,

    
        integer,

    
        positiveInteger,

    
        negativeInteger,

    
        nonPositiveInteger,

    
        nonNegativeInteger,

    
        @int,

    
        unsignedInt,

    
        @long,

    
        unsignedLong,

    
        @short,

    
        unsignedShort,

    
        @decimal,

    
        @float,

    
        @double,

    
        boolean,

    
        time,

    
        dateTime,

    
        duration,

    
        date,

    
        gMonth,

    
        gYear,

    
        gYearMonth,

    
        gDay,

    
        gMonthDay,

    
        Name,

    
        QName,

    
        NCName,

    
        anyURI,

    
        language,

    
        ID,

    
        IDREF,

    
        IDREFS,

    
        ENTITY,

    
        ENTITIES,

    
        NOTATION,

    
        NMTOKEN,

    
        NMTOKENS,

    
        anyType,
    }

    public enum ST_TotalsRowFunction
    {

    
        none,

    
        sum,

    
        min,

    
        max,

    
        average,

    
        count,

    
        countNums,

    
        stdDev,

    
        var,

    
        custom,
    }

    public enum ST_TableType
    {

    
        worksheet,

    
        xml,

    
        queryTable,
    }
    [Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    [XmlRoot("singleXmlCells", Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main", IsNullable = true)]
    public class CT_SingleXmlCells
    {

        private List<CT_SingleXmlCell> singleXmlCellField;

        public CT_SingleXmlCells()
        {
            this.singleXmlCellField = new List<CT_SingleXmlCell>();
        }
        [XmlElement]
        public List<CT_SingleXmlCell> singleXmlCell
        {
            get
            {
                return this.singleXmlCellField;
            }
            set
            {
                this.singleXmlCellField = value;
            }
        }
    }
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_SingleXmlCell
    {

        private CT_XmlCellPr xmlCellPrField;

        private CT_ExtensionList extLstField;

        private uint idField;

        private string rField;

        private uint connectionIdField;

        public CT_SingleXmlCell()
        {
            this.extLstField = new CT_ExtensionList();
            this.xmlCellPrField = new CT_XmlCellPr();
        }
        [XmlElement]
        public CT_XmlCellPr xmlCellPr
        {
            get
            {
                return this.xmlCellPrField;
            }
            set
            {
                this.xmlCellPrField = value;
            }
        }
        [XmlElement]
        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
        [XmlAttribute]
        public uint id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        [XmlAttribute]
        public string r
        {
            get
            {
                return this.rField;
            }
            set
            {
                this.rField = value;
            }
        }
        [XmlAttribute]
        public uint connectionId
        {
            get
            {
                return this.connectionIdField;
            }
            set
            {
                this.connectionIdField = value;
            }
        }
    }
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_XmlCellPr
    {

        private CT_XmlPr xmlPrField;

        private CT_ExtensionList extLstField;

        private uint idField;

        private string uniqueNameField;

        public CT_XmlCellPr()
        {
            this.extLstField = new CT_ExtensionList();
            this.xmlPrField = new CT_XmlPr();
        }
        [XmlElement]
        public CT_XmlPr xmlPr
        {
            get
            {
                return this.xmlPrField;
            }
            set
            {
                this.xmlPrField = value;
            }
        }
        [XmlElement]
        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
        [XmlAttribute]
        public uint id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        [XmlAttribute]
        public string uniqueName
        {
            get
            {
                return this.uniqueNameField;
            }
            set
            {
                this.uniqueNameField = value;
            }
        }
    }
    [Serializable]
    [XmlType(Namespace = "http://schemas.openxmlformats.org/spreadsheetml/2006/main")]
    public class CT_XmlPr
    {

        private CT_ExtensionList extLstField;

        private uint mapIdField;

        private string xpathField;

        private ST_XmlDataType xmlDataTypeField;

        public CT_XmlPr()
        {
            this.extLstField = new CT_ExtensionList();
        }
        [XmlElement]
        public CT_ExtensionList extLst
        {
            get
            {
                return this.extLstField;
            }
            set
            {
                this.extLstField = value;
            }
        }
        [XmlAttribute]
        public uint mapId
        {
            get
            {
                return this.mapIdField;
            }
            set
            {
                this.mapIdField = value;
            }
        }
        [XmlAttribute]
        public string xpath
        {
            get
            {
                return this.xpathField;
            }
            set
            {
                this.xpathField = value;
            }
        }
        [XmlAttribute]
        public ST_XmlDataType xmlDataType
        {
            get
            {
                return this.xmlDataTypeField;
            }
            set
            {
                this.xmlDataTypeField = value;
            }
        }
    }
}
